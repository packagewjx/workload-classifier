apiVersion: v1
kind: Namespace
metadata:
  name: workload-classifier
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: workload-classifier
  namespace: workload-classifier
spec:
  selector:
    matchLabels:
      app: workload-classifier
  replicas: 1
  template:
    metadata:
      labels:
        app: workload-classifier
    spec:
      serviceAccountName: workload-classifier
      containers:
        - name: workload-classifier
          image: packagewjx/workload-classifier:latest
          ports:
            - containerPort: 2000
        - name: sidecar
          image: bitnami/kubectl:1.19
          ports:
            - containerPort: 8001
          command: ['kubectl', 'proxy']
      initContainers:
        - name: mysql-pinger
          image: busybox:latest
          command: [ 'sh', '-c', 'until nslookup mysql; do echo "waiting for mysql"; sleep 1; done;' ]
        - name: database-creator
          image: mysql:8
          command: ["mysql", "-uroot", "-pwujunxian", '-hmysql',"-e create database IF NOT EXISTS metrics"]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: workload-classifier
spec:
  selector:
    matchLabels:
      app: mysql
  replicas: 1
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:8
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: wujunxian
          ports:
            - containerPort: 3306
---
apiVersion: v1
kind: Service
metadata:
  name: workload-classifier
  namespace: workload-classifier
spec:
  ports:
    - protocol: TCP
      port: 2000
  selector:
    app: workload-classifier
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: workload-classifier
spec:
  ports:
    - protocol: TCP
      port: 3306
  selector:
    app: mysql
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: workload-classifier
  namespace: workload-classifier
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: metrics-reader
rules:
  - apiGroups: [""]
    resources: [ "pods" ]
    verbs: [ "list" ]
  - apiGroups: [ "metrics.k8s.io" ]
    resources: [ "pods" ]
    verbs: [ "list" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: metrics-reader
subjects:
  - kind: ServiceAccount
    name: workload-classifier
    namespace: workload-classifier
roleRef:
  kind: ClusterRole
  name: metrics-reader
  apiGroup: rbac.authorization.k8s.io